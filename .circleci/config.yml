# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

experimental:
  notify:
    branches:
      only:
        - master

jobs:
  test:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - run: make build-deps citest ci-upload-coverage
  test_yoonit:
    docker:
      - image: replicated/yoonit:latest
    steps:
      - checkout
      - run: git remote -v; echo $CIRCLE_REPOSITORY_URL
      # requires YOONIT_AUTH set to a valid token
      - run: /usr/local/bin/yoonit wait

  deploy_unstable:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - run: docker pull alpine:latest # make sure it's fresh
      - deploy:
          command: curl -sL https://git.io/goreleaser | bash -s -- --snapshot --config .goreleaser.unstable.yml
      - run: docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
      - deploy:
          command: docker push replicated/ship:unstable
  integration:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - run: make integration-test

  deploy:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/replicatedhq/ship
    steps:
      - checkout
      - setup_remote_docker
      - run: docker pull alpine:latest # make sure it's fresh
      - run: docker login -u="$DOCKERHUB_DOCKER_USER" -p="$DOCKERHUB_DOCKER_PASS"
      - deploy:
          command: curl -sL https://git.io/goreleaser | bash
      # todo drop a release-api message to bump a version in the DB

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - integration
      - test:
          filters:
            tags:
              only: /.*/
      - deploy_unstable:
          requires:
            - test
            - integration
          filters:
            branches:
              only: /master/
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-.*)*/
            branches:
              ignore: /.*/
